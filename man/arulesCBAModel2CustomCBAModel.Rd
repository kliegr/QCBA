% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rMARC.R
\name{arulesCBAModel2CustomCBAModel}
\alias{arulesCBAModel2CustomCBAModel}
\title{arulesCBAModel2CustomCBAModel Converts a model created by \pkg{arulesCBA} so that it can be passed to qCBA}
\usage{
arulesCBAModel2CustomCBAModel(arulesCBAModel, cutPoints, rawDataset, attTypes)
}
\arguments{
\item{arulesCBAModel}{aobject returned  by arulesCBA::CBA()}

\item{cutPoints}{specification of cutpoints applied on the data before they were passed to rCBA::build}

\item{rawDataset}{the raw data (before discretization). This dataset is used to guess attribute types if attTypes is not passed}

\item{attTypes}{vector of attribute types of the original data.  If set to null, you need to pass rawDataset.}
}
\description{
Creates instance of \link{customCBARuleModel} class based on model created by the \pkg{arulesCBA} package.
Instance of \link{customCBARuleModel} can then be passed to \link{qcba} instead of an instance of \link{CBARuleModel}, 
which is created with the arc package.
}
\examples{
if (! requireNamespace("arulesCBA", quietly = TRUE)) {
 message("Please install arulesCBA: install.packages('arulesCBA')")
}  else {
 discrModel <- discrNumeric(iris, "Species")
 irisDisc <- as.data.frame(lapply(discrModel$Disc.data, as.factor))
 arulesCBAModel <- arulesCBA::CBA(Species ~ ., data = irisDisc, supp = 0.05, 
  conf=0.9, lhs.support=TRUE)
 cCBAmodel <- arulesCBAModel2CustomCBAModel(arulesCBAModel, discrModel$cutp, iris)
 qCBAmodel <- qcba(cbaRuleModel=cCBAmodel,datadf=iris)
 print(qCBAmodel@rules)
}

}
